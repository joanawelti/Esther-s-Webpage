a:2:{s:8:"origFile";s:70:"typo3/sysext/lang/locallang_csh_em.xml|06-10-2010 10:40:03|version=2.3";s:10:"LOCAL_LANG";a:1:{s:7:"default";a:129:{s:9:".alttitle";s:30:"Tools > Extension Manager (EM)";s:12:".description";s:89:"The Extension Manager controls import, installation and upgrading of Extensions in TYPO3.";s:8:".details";s:997:"TYPO3 can be extended in nearly any direction without loosing backwards compatibility. The Extension API provides a powerful framework for easily adding, removing, installing and developing such extensions to TYPO3. This is in particular powered by the Extension Manager (EM) inside TYPO3.

"Extensions" is a term in TYPO3 which covers two other terms, plugins and modules.

A plugin is something that plays a role on the website itself. For example a board, guestbook, shop etc. It is normally enclosed in a PHP class and invoked through a USER or USER_INT cObject from TypoScript. A plugin is an extension in the frontend.

A module is a backend application which has it's own position in the administration menu. It requires backend login and works inside the framework of the backend. We might also call something a module if it exploits any connectivity of an existing module, that is if it simply adds itself to the function menu of existing modules. A module is an extension in the backend.";s:9:"_.seeAlso";s:235:"xMOD_csh_corebe,
Core / Extension Architecture | http://typo3.org/documentation/document-library/doc_core_inside/This_document-1/
Managing Extensions | http://typo3.org/documentation/document-library/doc_core_inside/Backend_user_setup/";s:15:"loaded.alttitle";s:17:"Loaded Extensions";s:18:"loaded.description";s:298:""Loaded extensions" are currently running on the system. This list shows you which extensions are loaded and in which order.
"Shy" extensions are also loaded but "hidden" in this list because they are system related and generally you should just leave them alone unless you know what you are doing.";s:14:"loaded.details";s:451:"The extensions in this list are shown in the order they are found in $TYPO3_CONF_VARS[EXT][extList].
To de-install an extension you simply click the green "-" icon. If there are no dependencies requiring the extension it will be removed from the list of installed extensions.
The "Rq" extensions in the loaded extensions list are "required extensions". These are related so deeply to the system that you cannot disable them from the Extension Manager.";s:13:"_loaded.image";s:27:"EXT:lang/cshimages/em_1.png";s:18:"loaded.image_descr";s:57:"The list of loaded extensions shown in the loading order.";s:14:"avail.alttitle";s:20:"Available Extensions";s:17:"avail.description";s:369:"Available extensions are extensions which are present in the extension folders. You can install any of the available extensions in this list. When you install an extension it will be loaded by TYPO3 from that moment.
In this list the extensions with dark background are installed (loaded) - the others just available (not loaded), ready to be installed on your request.";s:13:"avail.details";s:463:"You can install an extension by clicking the gray "+" icon in this list. If you want to de-install an extension you click the green "-" icon.
When you click the install button ("+") you will most often end in a dialog where you have to confirm the creation of database tables and fields or maybe you will be asked to "clear all cache". The Extension Manager automatically handles these requirements for you which makes it extremely easy to install new extensions.";s:12:"_avail.image";s:57:"EXT:lang/cshimages/em_2.png,
EXT:lang/cshimages/em_12.png";s:17:"avail.image_descr";s:499:"The list of available extension on the server. The list is compiled from extensions found in the "local", "global" and "system" extension folders.
If you click the install icon ("+") of an extension you might end in a dialog like this. In this case a new database table is required. The Extension Manager will automatically detect that it does not exist yet and suggest that you create it. The creation automatically takes place as well, simply by accepting the changes when pressing "Make updates".";s:15:"import.alttitle";s:20:"Importing Extensions";s:18:"import.description";s:309:"This is the process of bringing the files of an extension to the servers filesystem. You can do this either by importing from a repository at a URL (usually from TER; TYPO3 Extension Repository at typo3.org) or by uploading a "t3x" file which someone else created from the Extension Manager on another server.";s:14:"import.details";s:917:"<b>Import from TER</b>
To connect to the TER you simply click the button "Connect to online repository". This will request the URL shown in the text above the button and the URL should return a list of available extension you can import.
If you know what you are looking for then enter a search word in the look-up box. In particular this helps you to look up a specific extension key. The connection to TER will be much faster if you use this since less data is sent over the wire!

<b>Upload from file</b>
For private projects the exchange of extensions is easily done by sending "t3x" files from system to system. In one TYPO3 installation you simply go to the menu "Backup/Delete" of an extension and download a "Backup" of the extension. The fileformat is a serialized PHP array, compressed if possible. This file can then be uploaded in the Extension Manager of another TYPO3 system where you want to import it.";s:15:"_import.seeAlso";s:51:"_MOD_tools_em:backup_delete,
_MOD_tools_em:settings";s:13:"_import.image";s:27:"EXT:lang/cshimages/em_3.png";s:18:"import.image_descr";s:300:"The "Import" screen. Before you connect to the online repository you might like to configure typo3.org username and password since that will be used to also select "Member" extensions in TER, if any. You can also enable "Get own/member/selected extensions only" if you want to limit the list further.";s:19:"import_ter.alttitle";s:17:"Extensions in TER";s:22:"import_ter.description";s:394:"Extensions in this list are online for immediate download from the TYPO3 Extension Repository (TER).
Extensions with dark background are those already on your server - the others must be imported from the repository to your server before you can use them.
If you want to use an extension from the repository, you should simply click the "import" button with the red arrow left to the extension.";s:18:"import_ter.details";s:1045:"<b>Import Extensions</b>
If an extension does not yet exist on your server you will see the icon with the red arrow next to that extension. A single click and the extension will be downloaded and the files extracted on your server. The download directory is seen if you move the mouse over the icon (in the tool-tip text).

<b>Update Extensions</b>
You can update extensions that are always on your system by clicking the icon with the green arrows. The update icon will appear if the "minor" version number (middle digit) has been incremented. This means that extensions updated on the dev-version number (the third digit) will not be shown as "ready for update". (You can configure TYPO3 to do that though!).

<b>Seeing details about an extension in TER</b>
You can also click the title of an extension to see details about it. That will also allow you to perform a more detailed update operation where you can select version number and download location (local/global/system).
You can also ask to have the most recent translations downloaded.";s:17:"_import_ter.image";s:58:"EXT:lang/cshimages/em_10.png,
EXT:lang/cshimages/em_11.png";s:22:"import_ter.image_descr";s:633:"List of extensions from TER. The red arrow icon is the "Import" link (for new extensions), the green arrow icon is the "Update" link (for an extension that is already on your server). If an extension is already available in the most recent version you will not see any icon at all to the left of the extension.
If you clicked the title of an extension you will request the repository for details about the extension. This also allows you to select a specific version for import. You can also select the install location (global/local) and you can request to have the most recent translations merged into the extension upon retrieval.";s:13:"info.alttitle";s:17:"Extension Details";s:16:"info.description";s:34:"Shows details about the extension.";s:12:"info.details";s:561:"In this view some of the details are simply a display of the information from the "ext_emconf.php" file in the extension. The "emconf" file contains meta data for the Extension Manager.

The Extension Manager will also go a bit further and perform some analysis of the scripts in the extension. The list will include the findings of this analysis and if any errors were found they will be displayed. Usually these errors will not prevent the extension from working but more likely point out some theoretical problems that the extension developer should address.";s:11:"_info.image";s:27:"EXT:lang/cshimages/em_4.png";s:16:"info.image_descr";s:126:"The details view of an extension displays live statistics from analysis as well as static data from the "ext_emconf.php" file.";s:22:"backup_delete.alttitle";s:26:"Backup Extension as a file";s:25:"backup_delete.description";s:227:"Click the "Download" link here and you will download the extension as a file containing a serialized PHP array, a hash and everything possibly compressed if the server supports it. Save the file with a filename ending on "t3x".";s:22:"_backup_delete.seeAlso";s:20:"_MOD_tools_em:import";s:20:"_backup_delete.image";s:27:"EXT:lang/cshimages/em_5.png";s:25:"backup_delete.image_descr";s:100:""Backup" of extensions - also very useful for exchange of extensions between members of a workgroup.";s:15:"upload.alttitle";s:43:"Upload an Extension to the repository (TER)";s:18:"upload.description";s:264:"Here you can upload an extension to TER. In order to do so you must enter your TYPO3.org username and password in the form. In addition each extension has an upload password you need to add as well. You should also make sure you registered / own the extension key!";s:14:"upload.details";s:410:"<b>Changelog</b>
In the changelog field you enter the changes made or the reason for the upload. This will be displayed in the list of new extensions.

<b>Version numbers</b>
Select a method for incrementation of the version number. For new "versions" of your extension you should select "sub" or "main" which will display your extension in the list of new extensions. For maintenance uploads you select "dev".";s:15:"_upload.seeAlso";s:102:"_MOD_tools_em:settings,
Register Extension Keys | http://typo3.org/extensions/register-extension-keys/";s:13:"_upload.image";s:27:"EXT:lang/cshimages/em_6.png";s:18:"upload.image_descr";s:115:"The upload form for extensions. The extension is submitted to the selected repository, usually TYPO3.org (default).";s:18:"editfiles.alttitle";s:31:"Editing scripts in an extension";s:21:"editfiles.description";s:165:"The Extension Manager can be used for editing scripts in extensions. This feature is mostly for emergencies since a webbrowser is not the ideal tool for programming.";s:17:"editfiles.details";s:163:"<b>Notice:</b>
Before editing of extension scripts can be performed you have to disable the configuration option "TYPO3_CONF_VARS[EXT][noEdit]" in "localconf.php".";s:16:"_editfiles.image";s:27:"EXT:lang/cshimages/em_7.png";s:21:"editfiles.image_descr";s:100:"Some file types - like PHP scripts - can be edited by a textarea field inside the Extension Manager.";s:17:"settings.alttitle";s:26:"Extension Manager Settings";s:20:"settings.description";s:210:"Enter settings for the Extension Manager. The username and password is for connections to the repository (usually TYPO3.org) and the upload password is that you would normally use for upload of your extensions.";s:16:"settings.details";s:96:"<b>Notice:</b>
This information is not very well protected! It is send and stored in clear-text!";s:15:"_settings.image";s:27:"EXT:lang/cshimages/em_8.png";s:20:"settings.image_descr";s:29:"Settings for TER connections.";s:16:"makenew.alttitle";s:27:"Kickstarting new extensions";s:19:"makenew.description";s:291:"The "Kickstarter" is an application which allows you to start up new extension work very quickly. Through an interface you can create a basic framework for your extension where all the boring stuff is configured from the beginning and you can concentrate directly on coding your application.";s:15:"makenew.details";s:363:"The Extension Repository Kickstarter is a separate extension, "extrep_wizard". Please see more information about the kickstarter otherwise.

<b>Notice:</b>
The Kickstarter is NOT an editor! When a new extension is started you cannot - as a rule of thumb - go back an edit it with the kickstarter! It will just overwrite any custom changes you did in the meantime!";s:16:"_makenew.seeAlso";s:259:"Register Extension Keys | http://typo3.org/extensions/register-extension-keys/
Extension API | http://typo3.org/documentation/document-library/doc_core_api/Introduction-f289e83016/
Documentation Matrix | http://typo3.org/documentation/document-library/Matrix/";s:14:"_makenew.image";s:27:"EXT:lang/cshimages/em_9.png";s:19:"makenew.image_descr";s:438:"When the "Extension Repository Kickstarter" is enabled it adds itself in the menu of the Extension Manager. From here you will be able to start your new extensions. Before you do so you should register an extension key and enter a title and description as base data. From that point it is just clicking the "+" icons to add the various types of functionality you want. Finally you click "View result" to write the extension to the server.";s:19:"emconf_shy.alttitle";s:3:"Shy";s:22:"emconf_shy.description";s:145:"If set, the extension will normally be hidden in the EM because it might be a default extension or otherwise something which is not so important.";s:18:"emconf_shy.details";s:297:"Use this flag if an extension is of "rare interest" (which is not the same as un-important - just an extension not sought for very often...)
It does not affect whether or not it's enabled. Only display in EM.
Normally "shy" is set for all extensions loaded by default according to TYPO3_CONF_VARS.";s:24:"emconf_category.alttitle";s:8:"Category";s:27:"emconf_category.description";s:40:"Which category the extension belongs to.";s:23:"emconf_category.details";s:593:"<b>be:</b> Backend (Generally backend oriented, but not a module)

<b>module:</b> Backend modules (When something is a module or connects with one)

<b>fe:</b> Frontend (Generally frontend oriented, but not a "true" plugin)

<b>plugin:</b> Frontend plugins (Plugins inserted as a "Insert Plugin" content element)

<b>misc:</b> Miscellaneous stuff (Where not easily placed elsewhere)

<b>services:</b> Contains TYPO3 services.

<b>templates:</b> Contains website templates

<b>doc:</b> Documentation (Eg. tutorials, FAQ's etc.)

<b>example:</b> Example extension (Which serves as examples etc.)";s:28:"emconf_dependencies.alttitle";s:33:"Dependencies of other extensions?";s:31:"emconf_dependencies.description";s:99:"This is a list of other extension keys which this extension depends on being loaded BEFORE it self.";s:27:"emconf_dependencies.details";s:170:"The EM will manage that dependency while writing the extension list  to localconf.php. You cannot install an extension unless its dependencies has been installed already.";s:25:"emconf_conflicts.alttitle";s:32:"Conflicts with other extensions?";s:28:"emconf_conflicts.description";s:150:"List of extension keys of extensions with which this extension does not work (and so cannot be enabled before those other extensions are un-installed)";s:24:"emconf_suggests.alttitle";s:20:"Suggested extensions";s:27:"emconf_suggests.description";s:154:"List of extension keys of extensions which you may want to try in conjunction with this extension because they bring added benefits when working together.";s:24:"emconf_priority.alttitle";s:26:"Requested Loading priority";s:27:"emconf_priority.description";s:94:"This tells the EM to try to put the extensions as the very first in the list. Default is last.";s:22:"emconf_module.alttitle";s:24:"Backend modules included";s:25:"emconf_module.description";s:100:"If any subfolders to an extension contains backend modules, those foldernames should be listed here.";s:21:"emconf_module.details";s:193:"It allows the EM to know about the existence of the module, which is important because the EM has to update the conf.php file of the module in order to set the correct TYPO3_MOD_PATH  constant.";s:21:"emconf_state.alttitle";s:17:"Development state";s:24:"emconf_state.description";s:44:"Which development state the extension is in.";s:20:"emconf_state.details";s:340:"<b>alpha</b>
Very initial development. May do nothing at all.

<b>beta</b>
Under current development. Should work partly but is not finished yet.

<b>stable</b>
Stable and used in production.

<b>experimental</b>
Nobody knows if this is going anywhere yet... Maybe still just an idea.

<b>test</b>
Test extension, demonstrates concepts etc.";s:24:"emconf_internal.alttitle";s:28:"Internally supported in core";s:27:"emconf_internal.description";s:85:"This flag indicates that the core source code is specifically aware of the extension.";s:23:"emconf_internal.details";s:478:"In other words this flag should convey the message that "this extension could not be written without some core source code modifications".

An extension is not internal just because it uses TYPO3 general classes eg. those from t3lib/.
True non-internal extensions are characterized by the fact that they could be written without making core source code changes, but relies only on existing classes  in TYPO3 and/or other extensions, plus its own scripts in the extension folder.";s:32:"emconf_clearCacheOnLoad.alttitle";s:26:"Clear cache when installed";s:35:"emconf_clearCacheOnLoad.description";s:85:"If set, the EM will request the cache to be cleared when this extension is installed.";s:29:"emconf_modify_tables.alttitle";s:24:"Existing tables modified";s:32:"emconf_modify_tables.description";s:83:"List of tablenames which are only modified - not fully created - by this extension.";s:28:"emconf_modify_tables.details";s:71:"Tables from this list found in the ext_tables.sql file of the extension";s:29:"emconf_doNotLoadInFE.alttitle";s:16:"Load in frontend";s:32:"emconf_doNotLoadInFE.description";s:123:""Yes" (default) will load the extension in the frontend and the backend. "No": the extension is loaded only in the backend.";s:28:"emconf_doNotLoadInFE.details";s:150:"Some extensions are only required in the backend. With this flag set, this extension is not loaded in the frontend context, thus speeding up the site.";s:23:"emconf_private.alttitle";s:7:"Private";s:26:"emconf_private.description";s:78:"If set, this version is not shown in the public list in the online repository.";s:22:"emconf_private.details";s:368:""Private" uploads requires you to manually enter a special key (which will be shown to you after an upload has been completed) to be able to import and view details for the uploaded extension.
This is nice when you are working on something internally which you do not want others to look at.
You can set and clear the private flag every time you upload your extension.";s:23:"_emconf_private.seeAlso";s:38:"_MOD_tools_em:emconf_download_password";s:33:"emconf_download_password.alttitle";s:17:"Download password";s:36:"emconf_download_password.description";s:64:"Additional password required for download of private extensions.";s:32:"emconf_download_password.details";s:269:"Anybody who knows the "special key" assigned to the private upload will be able to import it. Specifying an import password allows you to give away the download key for private uploads and also require a password given in addition. The password can be changed later on.";s:33:"_emconf_download_password.seeAlso";s:28:"_MOD_tools_em:emconf_private";s:20:"emconf_type.alttitle";s:17:"Installation type";s:23:"emconf_type.description";s:28:"The type of the installation";s:19:"emconf_type.details";s:2139:"The files for an extension are located in a folder named by the extension key. The location of this folder can be either inside typo3conf/ext/,  typo3/ext/ or typo3/sysext/. The extension must be programmed so that it automatically detects where it is located and can work from all three locations.

<b>Local location "typo3conf/ext/":</b> This is where to put extensions which are local for a particular TYPO3 installation. The typo3conf/ directory is always local, containing local configuration (eg. localconf.php), local modules etc. If you put an extension here it will be available for this TYPO3 installation only. This is a "per-database" way to install an extension.

<b>Global location "typo3/ext/":</b> This is where to put extensions which are global for the TYPO3 source code on the web server. These extensions will be available for any TYPO3 installation sharing the source code.
When you upgrade your TYPO3 source code you probably want to copy the typo3/ext/ directory from the former source to the new source, overriding the default directory. In this way all global extension you use will be installed inside the new sourcecode. After that you can always enter TYPO3 and upgrade the versions if needed.
This is a "per-server" way to install an extension.

<b>System location "typo3/sysext/":</b> This is system default extensions which cannot and should not be updated by the EM. They are distributed with the TYPO3 core.


<b>Loading precedence</b>
Local extensions take precedence which means that if an extension exists both in typo3conf/ext/ and typo3/ext/ the one in typo3conf/ext/ is loaded. Likewise global extension takes predence over system extensions. This means that extensions are loaded in the order of priority local-global-system.
In effect you can therefore have, say, a "stable" version of an extension installed in the global dir (typo3/ext/) which is used by all your projects on a server sharing source code, but on a single experimental project you can import the same extension in a newer "experimental" version and for that particular project the locally available extension will be used instead.";s:29:"emconf_doubleInstall.alttitle";s:24:"Installed twice or more?";s:32:"emconf_doubleInstall.description";s:99:"Tells you if the extensions is installed in more than one of the System, Global or Local locations.";s:28:"emconf_doubleInstall.details";s:227:"Because an extension can reside at three locations, System, Global and Local, this indicates if the extension is found in other locations than the current. In that case you should be aware which one of the extensions is loaded!";s:25:"emconf_rootfiles.alttitle";s:10:"Root files";s:28:"emconf_rootfiles.description";s:77:"List of the files in the extension folder. Does not list files in subfolders.";s:21:"emconf_dbReq.alttitle";s:21:"Database requirements";s:24:"emconf_dbReq.description";s:69:"Shows you the requirements to the database tables and fields, if any.";s:20:"emconf_dbReq.details";s:160:"This will read from the files ext_tables.sql and ext_tables_static+adt.sql and show you which tables, fields and static tables are required with this extension.";s:24:"emconf_dbStatus.alttitle";s:28:"Database requirements status";s:27:"emconf_dbStatus.description";s:83:"Displays the current status of the database compared to the extension requirements.";s:23:"emconf_dbStatus.details";s:139:"If the extension is loaded which will display and error message if some tables or fields are not present in the database as they should be!";s:21:"emconf_flags.alttitle";s:5:"Flags";s:24:"emconf_flags.description";s:98:"A list of special codes which tells you something about what parts of TYPO3 the extension touches.";s:20:"emconf_flags.details";s:1155:"This is a list of the flags:

<b>Module:</b> A true backend main/sub module is found to be added.

<b>Module+:</b> The extension adds itself to the function menu of an existing backend module.

<b>loadTCA:</b> The extension includes a function call to t3lib_div::loadTCA for loading a table. This potentially means that the system is slowed down, because the full table description of some table is always included. However there probably is a good reason for this to happen. Probably the extension tries to manipulate the TCA-config for an existing table in order to extend it.

<b>TCA:</b> The extension contains configuration of a table in $TCA.

<b>Plugin:</b> The extension adds a frontend plugin to the plugin list in Content Element type "Insert Plugin".

<b>Plugin/ST43:</b> TypoScript rendering code for the plugin is added to the static template "Content (default)". "Plugin" and "Plugin/ST43" are commonly used together.

<b>Page-TSconfig:</b> Default Page-TSconfig is added.

<b>User-TSconfig:</b> Default User-TSconfig is added.

<b>TS/Setup:</b> Default TypoScript Setup is added.

<b>TS/Constants:</b> Default TypoScript Constants is added.";s:23:"emconf_conf.description";s:73:"Shows if the extension has a template for further lowlevel configuration.";s:23:"emconf_TSfiles.alttitle";s:23:"Static TypoScript files";s:26:"emconf_TSfiles.description";s:50:"Shows which TypoScript static files may be present";s:22:"emconf_TSfiles.details";s:231:"If the files ext_typoscript_constants.txt and/or ext_typoscript_setup.txt is found in the extension folder they are included in the hierarchy of all TypoScript templates in TYPO3 right after the inclusion of other static templates.";s:25:"emconf_locallang.alttitle";s:15:"locallang-files";s:28:"emconf_locallang.description";s:212:"Shows which files named "locallang.php" are present in the extension folder (recursive search). Such files are usually used to present an array $LOCAL_LANG with labels for the application in the system languages.";s:27:"emconf_moduleNames.alttitle";s:20:"Backend Module names";s:30:"emconf_moduleNames.description";s:57:"Shows which module names were found inside the extension.";s:26:"emconf_classNames.alttitle";s:15:"PHP Class names";s:29:"emconf_classNames.description";s:58:"Shows which PHP-classes were found in .php and .inc files.";s:22:"emconf_errors.alttitle";s:6:"Errors";s:25:"emconf_errors.description";s:58:"Displays if any errors with the extension were discovered.";s:24:"emconf_NSerrors.alttitle";s:16:"Namespace errors";s:27:"emconf_NSerrors.description";s:83:"Certain naming convensions apply to extensions. This displays any violations found.";s:23:"emconf_NSerrors.details";s:153:"The naming convensions are defined in the "Inside TYPO3" document. To make naming as simple as possible, try to avoid underscores in your extension keys.";}}}